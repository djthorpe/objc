cmake_minimum_required(VERSION 3.15)

# Define project with proper languages
project(objc-gcc 
    VERSION 1.0.0
    LANGUAGES C OBJC
    DESCRIPTION "Objective-C runtime implementation using GCC runtime"
)

# Set C standard
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)

# Runtime selection with default
set(RUNTIME "gcc" CACHE STRING "Objective-C runtime to use (gcc)")
set_property(CACHE RUNTIME PROPERTY STRINGS "gcc")

# Validate runtime choice
if(NOT RUNTIME STREQUAL "gcc")
    message(FATAL_ERROR "Unsupported runtime: ${RUNTIME}. Only 'gcc' is supported.")
endif()

# Configure runtime-specific compiler flags
message(STATUS "Configuring for Objective-C runtime: ${RUNTIME}")

if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
    add_compile_options(-fgnu-runtime)
    message(STATUS "Using GCC with -fgnu-runtime")
elseif(CMAKE_C_COMPILER_ID MATCHES "Clang")
    add_compile_options(-fobjc-runtime=gcc)
    message(STATUS "Using Clang with -fobjc-runtime=gcc")
else()
    message(WARNING "Untested compiler: ${CMAKE_C_COMPILER_ID}. Build may fail.")
endif()

# Global include directory for the project
include_directories(${CMAKE_SOURCE_DIR}/include)

# Enable testing
include(CTest)
enable_testing()

# Add subdirectories
add_subdirectory(src/runtime-gcc)
add_subdirectory(src/tests)

# Optional: Add installation rules
install(DIRECTORY include/ DESTINATION include)
